---
# if you have any prepararion task
- name: "Prepare"
  hosts: "all"
  gather_facts: true
  tasks:

    #- name: "Include cryptographic content var file"
    #  ansible.builtin.include_vars: "../../tests/certs/main.yml"

    - name: "Include labocbz.prepare_host"
      tags:
        - "labocbz.prepare_host"
      ansible.builtin.include_role:
        name: "labocbz.prepare_host"

    - name: "Gather facts from all hosts"
      delegate_to: "{{ item }}"
      delegate_facts: true
      loop: "{{ groups['all'] }}"
      ansible.builtin.setup:

    - name: "Edit /etc/hosts file to add all hosts"
      loop: "{{ groups['all'] }}"
      loop_control:
        loop_var: host
      register: output
      changed_when: output.rc != 0
      ansible.builtin.shell: "echo \"{{ hostvars[host]['ansible_default_ipv4']['address'] }}  {{ host }} # from Molecule\" >> /etc/hosts"

- name: "Prepare Apache"
  hosts: "all:&APACHE2"
  gather_facts: true
  tasks:

    - name: "Import cryptographic content if needed (cert)"
      loop: "{{ inv_add_apache_confs_configurations }}"
      loop_control:
        loop_var: bundle
      when: inv_add_apache_confs_configurations is defined and bundle.type == "cert"
      ansible.builtin.copy:
        src: "../../tests/certs/{{ bundle.name }}.zip"
        dest: "/tmp/{{ bundle.name }}.zip"
        owner: "root"
        group: "root"
        mode: 0700

    - name: "Import cryptographic content if needed (CA)"
      loop: "{{ inv_add_apache_confs_configurations }}"
      loop_control:
        loop_var: bundle
      when: inv_add_apache_confs_configurations is defined and bundle.type == "CA"
      ansible.builtin.copy:
        src: "../../tests/certs/{{ bundle.name }}"
        dest: "/tmp/{{ bundle.name }}"
        owner: "root"
        group: "root"
        mode: 0700

- name: "Prepare Elasticsearch"
  hosts: "all:&ELASTICSEARCH"
  gather_facts: true
  tasks:

    - name: "Import cryptographic content if needed (cert)"
      loop: "{{ inv_elasticsearch_cert_bundles }}"
      loop_control:
        loop_var: bundle
      when: inv_elasticsearch_cert_bundles is defined and bundle.type == "cert"
      ansible.builtin.copy:
        src: "../../tests/certs/{{ bundle.name }}.zip"
        dest: "/tmp/{{ bundle.name }}.zip"
        owner: "root"
        group: "root"
        mode: 0700

    - name: "Import cryptographic content if needed (CA)"
      loop: "{{ inv_elasticsearch_cert_bundles }}"
      loop_control:
        loop_var: bundle
      when: inv_elasticsearch_cert_bundles is defined and bundle.type == "CA"
      ansible.builtin.copy:
        src: "../../tests/certs/{{ bundle.name }}"
        dest: "/tmp/{{ bundle.name }}"
        owner: "root"
        group: "root"
        mode: 0700

- name: "Prepare Logstash"
  hosts: "all:&LOGSTASH"
  gather_facts: true
  tasks:

    - name: "Import cryptographic content if needed (cert)"
      loop: "{{ inv_logstash_cert_bundles }}"
      loop_control:
        loop_var: bundle
      when: inv_logstash_cert_bundles is defined and bundle.type == "cert"
      ansible.builtin.copy:
        src: "../../tests/certs/{{ bundle.name }}.zip"
        dest: "/tmp/{{ bundle.name }}.zip"
        owner: "root"
        group: "root"
        mode: 0700

    - name: "Import cryptographic content if needed (CA)"
      loop: "{{ inv_logstash_cert_bundles }}"
      loop_control:
        loop_var: bundle
      when: inv_logstash_cert_bundles is defined and bundle.type == "CA"
      ansible.builtin.copy:
        src: "../../tests/certs/{{ bundle.name }}"
        dest: "/tmp/{{ bundle.name }}"
        owner: "root"
        group: "root"
        mode: 0700

- name: "Prepare Kibana"
  hosts: "all:&KIBANA"
  gather_facts: true
  tasks:

    - name: "Import cryptographic content if needed (cert)"
      loop: "{{ inv_kibana_cert_bundles }}"
      loop_control:
        loop_var: bundle
      when: inv_kibana_cert_bundles is defined and bundle.type == "cert"
      ansible.builtin.copy:
        src: "../../tests/certs/{{ bundle.name }}.zip"
        dest: "/tmp/{{ bundle.name }}.zip"
        owner: "root"
        group: "root"
        mode: 0700

    - name: "Import cryptographic content if needed (CA)"
      loop: "{{ inv_kibana_cert_bundles }}"
      loop_control:
        loop_var: bundle
      when: inv_kibana_cert_bundles is defined and bundle.type == "CA"
      ansible.builtin.copy:
        src: "../../tests/certs/{{ bundle.name }}"
        dest: "/tmp/{{ bundle.name }}"
        owner: "root"
        group: "root"
        mode: 0700
